if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
break
}else{
redrow <- 7
}
}
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
break
}
}
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- fucntion(.x, ...){
# Function to check RSL and Color ggf---------------------------
redRowfct <- fucntion(.x, ...) {
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(redrow:7, bold = F))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(~redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
?row_spec
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(.x,redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
next() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
. %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
print(i)
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
class(depot_tabelle[[1,3]])
class(depot_tabelle[[2,3]])
class(depot_tabelle[[3,3]])
depot_tabelle[[3,3]]
depot_tabelle[[1,3]]
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
depot_tabelle[[1,3]] == "https://www.tradesignalonline.com/scanner/default.aspx"
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else if(depot_tabelle[[i,3]] < 1.19){
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
yellowRowfct <- function(.x,...){
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
yellowRowfct <- function(.x,...){
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else if(depot_tabelle[[i,3]] < 1.19){
return(.x)
}
}
}
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
}else{
return(row_spec(.x,redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
yellowRowfct <- function(.x,...){
for (i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
### Lese alle Daten aus dem Log um Chart im zeitverlauf zu erstellen
#Erstelle benoetigte Tabelle--------------------------------------
zeit_werte <- tibble('Wert', 'Erstellt am', .rows = 400)
names(zeit_werte) <- c('Wert', 'Erstellt am')
zeit_werte$`Erstellt am` <- NA
for( x in 1:length(logjson$Werte)){
zeit_werte$Wert[[x]] <-  round(sum(logjson$Werte[[x]]), digits = 2)
zeit_werte$`Erstellt am`[[x]] <- logjson$Timestamp[[x]]
}
zeit_werte <- filter(zeit_werte, !is.na(zeit_werte$`Erstellt am`))
#Erstelle Plot
#-------------------------------------------------------------------
degiro_plot1 <- plot_ly(data = zeit_werte, x = ~ymd_hms(`Erstellt am`), y = ~Wert, type = 'scatter', mode = 'markers + lines', name = "Depot Degiro" ) %>%
layout(title = "Zeitlicher Verlauf des Degiro Depots",
xaxis = list(type = 'date',
title = "Zeitpunkt"),
yaxis = list (title = "Wert in €"))
degiro_plot1
logjson$Werte[[1]]
json <- fromJSON(file = "C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\ergebnis.json")
logjson <- fromJSON(file ="C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\log.json" )
### Lese alle Daten aus dem Log um Chart im zeitverlauf zu erstellen
#Erstelle benoetigte Tabelle--------------------------------------
zeit_werte <- tibble('Wert', 'Erstellt am', .rows = 400)
names(zeit_werte) <- c('Wert', 'Erstellt am')
zeit_werte$`Erstellt am` <- NA
for( x in 1:length(logjson$Werte)){
zeit_werte$Wert[[x]] <-  round(sum(logjson$Werte[[x]]), digits = 2)
zeit_werte$`Erstellt am`[[x]] <- logjson$Timestamp[[x]]
}
zeit_werte <- filter(zeit_werte, !is.na(zeit_werte$`Erstellt am`))
#Erstelle Plot
#-------------------------------------------------------------------
degiro_plot1 <- plot_ly(data = zeit_werte, x = ~ymd_hms(`Erstellt am`), y = ~Wert, type = 'scatter', mode = 'markers + lines', name = "Depot Degiro" ) %>%
layout(title = "Zeitlicher Verlauf des Degiro Depots",
xaxis = list(type = 'date',
title = "Zeitpunkt"),
yaxis = list (title = "Wert in €"))
degiro_plot1
logjson$Werte[[15]]
View(logjson)
logjson$Werte
View(json)
View(json)
rm(list = ls())
library(flexdashboard)
library(quantmod)
library(xts)
library(rvest)
library(tidyverse)
library(stringr)
library(forcats)
library(lubridate)
library(plotly)
library(dplyr)
library(PerformanceAnalytics)
library(tidyquant)
library(stringr)
library(tibble)
library(lemon)
library(kableExtra)
library(purrr)
library(rjson)
library(rlist)
json <- fromJSON(file = "C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\ergebnis.json")
logjson <- fromJSON(file ="C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\log.json" )
#Lade alle Symbole aus txt
txt_symbols <- read.csv("AKTIEN_SYMBOLE.txt", sep = ",", header = F)
# Übersicht über Orders ------------------------------------------------
if(is.null(unlist(json$Orders[[1]]$openOrders))){ openOrders <- "Keine"
}else{
openOrders <- unlist(json$Orders[[1]]$openOrders)
}
if(is.null(unlist(json$Orders[[1]]$cancelledOrders))){ cancelledOrders<- "Keine"
}else{
cancelledOrders <-unlist(json$Orders[[1]]$cancelledOrders)
}
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
completedOrders <-unlist(json$Orders[[1]]$completedOrders)
}
json$Orders[[1]]$completedOrders
json$Orders[[1]]$completedOrders[[1]]
paste(json$Orders[[1]]$completedOrders[[1]]$product, json$Orders[[1]]$completedOrders[[1]]$quantity)
seq_along(json$Orders[[1]]$completedOrders)
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
completedOrders <- for(x in seq_along(json$Orders[[1]]$completedOrders)){
paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
}
completedOrders <- tibble("Order", .rows = 10)
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
completedOrders <- filter(completedOrders, !is.na(Order))
}
completedOrders <- tibble("Order", .rows = 10)
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
completedOrders <- filter(completedOrders, !is.na(Order))
}
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
completedOrders <- filter(completedOrders, !is.na(completedOrders$"Order"))
}
completedOrders$"Order" <- !is.na(completedOrders$"Order")
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
completedOrders$"Order" <- !is.na(completedOrders$"Order")
}
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
# completedOrders$"Order" <- !is.na(completedOrders$"Order")
#
}
View(completedOrders)
seq_along(json$Orders[[1]]$completedOrders)
json$Orders[[1]]$completedOrders[[1]]$product
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in 1:seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
# completedOrders$"Order" <- !is.na(completedOrders$"Order")
#
}
View(completedOrders)
completedOrders <- tibble("Order", .rows = 10)
names(completedOrders) <- "Order"
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in 1:seq_along(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
# completedOrders$"Order" <- !is.na(completedOrders$"Order")
#
}
View(completedOrders)
1:seq_along(json$Orders[[1]]$completedOrders)
for(x in 1:seq_along(json$Orders[[1]]$completedOrders)){ print(x)}
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in 1:length(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
# completedOrders$"Order" <- !is.na(completedOrders$"Order")
#
}
View(completedOrders)
completedOrders <- []
completedOrders <- c()
names(completedOrders) <- "Order"
if(is.null(unlist(json$Orders[[1]]$completedOrders))){ completedOrders <- "Keine"
}else{
for(x in 1:length(json$Orders[[1]]$completedOrders)){
completedOrders[x] <-paste(json$Orders[[1]]$completedOrders[[x]]$product, json$Orders[[1]]$completedOrders[[x]]$quantity)
}
# completedOrders$"Order" <- !is.na(completedOrders$"Order")
#
}
completedOrders
