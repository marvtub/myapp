redrow <- i
break
}
}
wert_heute <- function(x){
wert_temp <- c(1:101)
for(i in seq_along(x)){
wert_temp[i] <- tail(x[[i]][,6], n=1)
}
return (wert_temp)
}
# bsp für EINEN wochenschlusskurs : mean(tail(dlg[,6], n = 130)[120:125])
# Versuche ausschließlich die Namen in eine Liste zu packen
tabelle_namen <- function(x){
namen_tabelle <- tibble(.rows = 101)
for(i in 1:101){
for (y in 1:101) {
}
namen_tabelle[i] <- tibble(names(hdax_list[[i]][,6]))
}
namen_tabelle <- namen_tabelle[1,]
return(namen_tabelle[x])
}
namen_tabelle <- tabelle_namen(1:101)
# Berechnung des RSL einer Aktie ( auf zwei Nachkommestellen genau )
wert_rsl <- function(x){
wochendurchschn_bechtle <- tibble(.rows =27)
letzter_kurs <- tibble(.rows = 1)
rsl_kurse <- tibble(.rows = 1)
for(g in 1:length(x)){
beg <- 125
end <- 130
letzter_kurs[1,g] <- try(wert_heute(x)[[g]])
for(i in 1:26){
if( NA %in% x[[g]][,6]){
wochendurchschn_bechtle[i,g] <- "FALSCHER WERT"
next()
}else{
wochendurchschn_bechtle[i,g] <- try(mean(as.double(unlist(tail(x[[g]][,6],130)[beg:end]))), silent = TRUE)
beg <- beg - 5
end <- end -5
}
}
wochendurchschn_bechtle[27,g] <- try( mean(as.double(unlist(wochendurchschn_bechtle[1:26,g]))) )
rsl_kurse[1,g] <- try((as.double(unlist(letzter_kurs[1,g])))/((as.double(unlist(wochendurchschn_bechtle[27,g])))))
}
return(rsl_kurse)
}
# Alle Namen bekommen
get_names <- function(x){
names_temp <- seq_along(x)
for(i in seq_along(x)){
names_temp[i] <- names(x[[i]][,6])
}
return(names_temp)
}
# Alle Werte bekommen
get_wert <- function(x){
wert_temp <- seq_along(x)
for(i in seq_along(x)){
wert_temp[i] <- as.double(tail(x[[i]][,6])[6])
}
return(wert_temp)
}
# Obige Version kürzen um Tabelle zu erstellen
werte_tabelle <- data.frame(
Aktie = get_names(hdax_list),
Wert = get_wert(hdax_list),
RSL = try(t(wert_rsl(hdax_list)))
)
depot_tabelle <- data.frame(
Aktie = get_names(help_df),
Wert = get_wert(help_df),
RSL = try(t(wert_rsl(help_df)))
)
# Schönes Format für alle Werte der Tabelle
werte_tabelle$Wert <- format(as.numeric(werte_tabelle$Wert),trim = T)
werte_tabelle$RSL <-  format(as.numeric(werte_tabelle$RSL),trim = T)
depot_tabelle$Wert <- format(as.numeric(depot_tabelle$Wert),trim = T)
depot_tabelle$RSL <-  format(as.numeric(depot_tabelle$RSL),trim = T)
# #Wandle Performace (%) in Prozent um
# werte_tabelle$Perf_1W <- sprintf("%.1f %%", 100*werte_tabelle$Perf_1W)
# # Spucke alle RSL Werte numerisch aus
# werte_tabelle$RSL <- as.numeric(werte_tabelle$RSL)
# mache eine schöne Tabelle
for(x in seq_along(depot_tabelle$RSL)){
depot_tabelle$RSL[x] <- ifelse("NA" %in% depot_tabelle$RSL[x],"https://www.tradesignalonline.com/scanner/default.aspx", depot_tabelle$RSL[x])
}
# Function to check RSL and Color ggf---------------------------
redrow <- NULL
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
break
}
}
greenrow <- NULL
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
break
}
}
#---------------------------------------------------------------- Color
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
redrow <- 8
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
break
}
}
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
break
}
}
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
redrow <- 8
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
break
}else{
redrow <- 7
}
}
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
break
}
}
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
depot_tabelle <- depot_tabelle[order(depot_tabelle$RSL, decreasing = T),]
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- fucntion(.x, ...){
# Function to check RSL and Color ggf---------------------------
redRowfct <- fucntion(.x, ...) {
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(redrow:7, bold = F))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(~redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
?row_spec
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
break
}else{
return(row_spec(.x,redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
next() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
. %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else{
print(i)
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
class(depot_tabelle[[1,3]])
class(depot_tabelle[[2,3]])
class(depot_tabelle[[3,3]])
depot_tabelle[[3,3]]
depot_tabelle[[1,3]]
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else{
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
depot_tabelle[[1,3]] == "https://www.tradesignalonline.com/scanner/default.aspx"
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
print(i)
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else if(depot_tabelle[[i,3]] < 1.19){
return(.x)
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
# row_spec(redrow:7, bold = T, color = "white", background = "#D7261E") %>% # RED
# row_spec(1:(greenrow), bold = T, color = "black", background = "#24b548") %>% #GREEN
row_spec((greenrow+1):(redrow-1), bold = T, color = "black", background = "#f6f94a") # YELLOW
yellowRowfct <- function(.x,...){
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
yellowRowfct <- function(.x,...){
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
greenRowfct <- function(.x, ...){
greenrow <- 1
for( i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.2){
greenrow <- i
return(row_spec(.x, 1:(greenrow), bold = T, color = "black", background = "#24b548"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}else if(depot_tabelle[[i,3]] < 1.19){
return(.x)
}
}
}
# Function to check RSL and Color ggf---------------------------
redRowfct <- function(.x, ...) {
redrow <- 7
for(i in seq_along(depot_tabelle$Aktie)){
if(depot_tabelle[[i,3]] < 1.05){
redrow <- i
return(row_spec(redrow:7, bold = T, color = "white", background = "#D7261E"))
}else{
return(row_spec(.x,redrow:7, bold = F, color = "black", background = "white"))
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
yellowRowfct <- function(.x,...){
for (i in seq_along(depot_tabelle$Aktie)) {
if(depot_tabelle[[i,3]] < 1.19 && depot_tabelle[[i,3]] > 1.05){
return(row_spec(.x, (i+1):(i-1), bold = T, color = "black", background = "#f6f94a"))
}else if(depot_tabelle[[i,3]] == "https://www.tradesignalonline.com/scanner/default.aspx") {
next()
}
}
}
knitr::kable(depot_tabelle) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
redRowfct() %>%
greenRowfct() %>%
yellowRowfct() # YELLOW
### Lese alle Daten aus dem Log um Chart im zeitverlauf zu erstellen
#Erstelle benoetigte Tabelle--------------------------------------
zeit_werte <- tibble('Wert', 'Erstellt am', .rows = 400)
names(zeit_werte) <- c('Wert', 'Erstellt am')
zeit_werte$`Erstellt am` <- NA
for( x in 1:length(logjson$Werte)){
zeit_werte$Wert[[x]] <-  round(sum(logjson$Werte[[x]]), digits = 2)
zeit_werte$`Erstellt am`[[x]] <- logjson$Timestamp[[x]]
}
zeit_werte <- filter(zeit_werte, !is.na(zeit_werte$`Erstellt am`))
#Erstelle Plot
#-------------------------------------------------------------------
degiro_plot1 <- plot_ly(data = zeit_werte, x = ~ymd_hms(`Erstellt am`), y = ~Wert, type = 'scatter', mode = 'markers + lines', name = "Depot Degiro" ) %>%
layout(title = "Zeitlicher Verlauf des Degiro Depots",
xaxis = list(type = 'date',
title = "Zeitpunkt"),
yaxis = list (title = "Wert in €"))
degiro_plot1
logjson$Werte[[1]]
json <- fromJSON(file = "C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\ergebnis.json")
logjson <- fromJSON(file ="C:\\Users\\admin\\Documents\\Alles mit JS\\DEGIRO_API\\Ergebnis\\log.json" )
### Lese alle Daten aus dem Log um Chart im zeitverlauf zu erstellen
#Erstelle benoetigte Tabelle--------------------------------------
zeit_werte <- tibble('Wert', 'Erstellt am', .rows = 400)
names(zeit_werte) <- c('Wert', 'Erstellt am')
zeit_werte$`Erstellt am` <- NA
for( x in 1:length(logjson$Werte)){
zeit_werte$Wert[[x]] <-  round(sum(logjson$Werte[[x]]), digits = 2)
zeit_werte$`Erstellt am`[[x]] <- logjson$Timestamp[[x]]
}
zeit_werte <- filter(zeit_werte, !is.na(zeit_werte$`Erstellt am`))
#Erstelle Plot
#-------------------------------------------------------------------
degiro_plot1 <- plot_ly(data = zeit_werte, x = ~ymd_hms(`Erstellt am`), y = ~Wert, type = 'scatter', mode = 'markers + lines', name = "Depot Degiro" ) %>%
layout(title = "Zeitlicher Verlauf des Degiro Depots",
xaxis = list(type = 'date',
title = "Zeitpunkt"),
yaxis = list (title = "Wert in €"))
degiro_plot1
logjson$Werte[[15]]
View(logjson)
logjson$Werte
